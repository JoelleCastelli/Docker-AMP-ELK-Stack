version: '3.2'

services:
  elasticsearch:
    container_name: elasticsearch-docker
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
    networks:
      - elk

  logstash:
    container_name: logstash-docker
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5000:5000"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    container_name: kibana-docker
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

  web:
    build: site
    container_name: apache-docker
    ports:
      - "8080:80"
    volumes:
      - ./www:/var/www/html
    depends_on:
      - database
    links:
      - redis:redis-docker

  database:
    image: mysql:5.7
    container_name: mysql-docker
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: docker
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: user
      MYSQL_PASSWORD: user
    volumes:
      - ./db_data:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin-docker
    depends_on:
      - database
    ports:
      - 8888:80
    environment:
      - PMA_ARBITRARY=1

  mailhog:
      image: mailhog/mailhog
      container_name: mailhog-docker
      logging:
        driver: 'none'  # disable saving logs
      ports:
        - 1025:1025 # smtp server
        - 8025:8025 # web ui

  redis:
    image: "redis:latest"
    container_name: redis-docker
    ports:
      - "6379:6379"

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch: